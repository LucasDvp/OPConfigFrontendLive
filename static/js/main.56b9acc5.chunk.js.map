{"version":3,"sources":["res/feedback_url_image.png","components/BooleanConfig.js","components/MetadataItemConfig.js","components/MetadataDiscovery.js","components/MetadataSetting.js","components/OutputConfig.js","components/EmailConfigs.js","components/StringWithTitleConfig.js","components/RepoConfigs.js","components/MetadataRegister.js","components/NewMetadata.js","components/OldMetadataSetting.js","components/OldMetadata.js","components/FunctionalSetting.js","components/Functional.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","BooleanConfig","_ref","keyName","des","checked","react_default","a","createElement","style","display","flexDirection","alignItems","justifyContent","margin","tooltip","title","icon","type","theme","col","es_switch","defaultChecked","InputGroup","Input","Group","MetadataItemConfig","state","showInput","clickShowFileScopeToggle","oldShowInput","_this","setState","_this$props","this","props","fileJson","value","_this$props$hasFileMe","hasFileMetadata","_this$props$showFileM","showFileMetadata","hint","console","log","fileMetadataContent","input","addonBefore","placeholder","defaultValue","addonAfter","onClick","es_button","disabled","marginBottom","size","marginTop","span","Component","ListItem","List","Item","Search","TabPane","Tabs","colors","MetadataButton","isSelected","onToggleMetadata","TitleBox","_ref2","groupName","color","length","row","gutter","tag","MetadataDiscovery","initState","componentWillReceiveProps","o","nextProps","onTabClick","onClose","globalMetadatas","onCancel","onSubmitMetadatas","selectedMetadatas","_","filter","metadatas","metadataKey","oldMetadata","find","key","metadata","assign","onToggleSecondDrawer","secondDrawerOpen","secondDrawerTitle","secondDrawerDes","secondDrawerType","secondDrawerGroup","group","secondDrawerImageDetail","imgUrl","_this2","isOpen","allMetadatas","map","actions","Meta","description","listContainerStyle","height","overflowY","groupedMetadata","groupBy","groupedMetadataItems","keys","index","tab","list","child","detailImageDiv","isEmpty","className","src","alt","imageVisible","drawer","width","visible","enterButton","tabs","defaultActiveKey","onChange","position","bottom","left","padding","backgroundColor","block","closable","es_alert","message","dist_default","images","MetadataSetting","openAddMetadata","onToggleAddMetadata","addMetadataToPanel","name","isChecked","metadataSet","metadataItems","MetadataItemConfig_MetadataItemConfig","divider","MetadataDiscovery_MetadataDiscovery","Option","Select","OutputConfig","branches","selected","options","branch","es_select","mode","EmailConfigs","items","emails","email","EmailConfigs_ListItem","href","marginLeft","bordered","StringWithTitleConfig","justify","fontSize","fontWeight","RepoConfigs","FormItem","Form","TextArea","formItemLayout","labelCol","xs","sm","wrapperCol","fullWidthItemLayout","metadataType","MetadataRegisterForm","onAddMetadataSet","e","preventDefault","form","validateFields","err","values","first","validateValueExist","rule","callback","valueArray","names","includes","concat","getFieldDecorator","es_form","onSubmit","Object","label","rules","required","validator","MetadataRegister_Option","allowClear","notFoundContent","groups","rows","valuePropName","getValueFromEvent","normFile","upload","Dragger","action","htmlType","uniq","MetadataRegister","showMetadataRegister","MetadataRegistrationForm","create","Header","Layout","Sider","Content","SubMenu","Menu","menuName","docset1Metadatas","docset2Metadatas","detailImg","NewMetadata","collapsed","selectedContent","docsetMetadata1","docsetMetadata2","toggle","menuClick","valuesToBeAdded","item","hintValue","parseInt","uniqBy","newMetadata","success","onToggleMetadataRegister","contentRender","RepoConfigs_RepoConfigs","MetadataSetting_MetadataSetting","content","layout","trigger","collapsible","menu","defaultSelectedKeys","defaultOpenKeys","textAlign","background","paddingLeft","MetadataRegister_MetadataRegister","OldMetadataSetting","onAddMetadata","OldMetadataSetting_OldMetadataSetting","OldMetadata_Sider","OldMetadata_SubMenu","OldMetadata_Header","OldMetadata_Content","Tab","typeColorMap","string","bool","one or many","object","number","subGroup","FunctionalSetting","updatedItemNums","getGroupedCount","reduce","result","hasOwnProperty","docsetName","oldMetadatasNum","newMetadatasNum","mapValues","onClickTabs","newUpdatedItemNums","set","newMetadatas","onFakeChangeMetadatas","checkedChildren","unCheckedChildren","input_number","groupedItems","tabItems","badge","count","dataSource","renderItem","extra","getInput","menuNames","docsetsMetadatas","Functional","onToggleCollapsed","Functional_Sider","idx","Functional_Header","Functional_Content","FunctionalSetting_FunctionalSetting","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","Route","exact","path","component","OldMetadata","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56b9acc5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/feedback_url_image.607338c8.png\";","import React from 'react'\r\nimport { Switch, Col, Tooltip, Icon } from 'antd'\r\n\r\nexport default function BooleanConfig({keyName, des, checked}) {\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', margin: '15px 0'}}>\r\n            <div style={{display: 'flex'}}>\r\n                <h3>{keyName}</h3>\r\n                <Tooltip title={des}>\r\n                    <Icon type=\"info-circle\" theme=\"twoTone\" style={{margin: '3px'}}/>\r\n                </Tooltip>\r\n            </div>\r\n            <Col>\r\n                <Switch defaultChecked={checked} />\r\n            </Col>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { Input, Col, Button, Icon } from 'antd'\r\n\r\nconst InputGroup = Input.Group\r\nexport default class MetadataItemConfig extends Component {\r\n\r\n    state = {\r\n        showInput: false\r\n    }\r\n\r\n    clickShowFileScopeToggle = () => {\r\n        const oldShowInput = this.state.showInput\r\n        this.setState({\r\n            showInput: !oldShowInput\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { keyName, fileJson, value, hasFileMetadata=false, showFileMetadata=true, hint } = this.props\r\n        console.log('hehe', hint, value)\r\n        let fileMetadataContent = this.state.showInput ? \r\n           \r\n            <Input addonBefore=\"File Scope\" placeholder=\"default is global scope\" defaultValue={fileJson} addonAfter={<a onClick={this.clickShowFileScopeToggle}><Icon type='check'/></a>}/>\r\n            : \r\n            <Button type='primary' icon='copy' disabled={!hasFileMetadata} onClick={this.clickShowFileScopeToggle}>Show File Scope</Button>\r\n        \r\n        return (\r\n            <div style={{marginBottom: '15px'}}>\r\n                <InputGroup size=\"large\" style={{ display: 'flex', marginTop: '10px', justifyContent: 'space-between'}}>\r\n                    <Col span={6}>\r\n                        <Input defaultValue={keyName} />\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Input defaultValue={value} placeholder={hint} />\r\n                    </Col>\r\n                    <Col style={{display: showFileMetadata ? 'default' : 'none' }}>\r\n                        {fileMetadataContent}\r\n                    </Col>\r\n                    <Col>\r\n                        <Button type='primary'>Delete</Button>\r\n                    </Col>\r\n                </InputGroup>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { List, Button, Drawer, Input, Tabs, Tag, Row, Col, Alert, Badge } from 'antd'\r\nimport _ from 'lodash'\r\nimport '../MetadataDiscovery.css'\r\nimport Viewer from 'react-viewer';\r\nimport 'react-viewer/dist/index.css';\r\n\r\nconst ListItem = List.Item\r\nconst Search = Input.Search\r\nconst TabPane = Tabs.TabPane \r\nconst colors = ['magenta', 'orange', 'green', 'yellow', 'orange', 'cyan', 'blue', 'purple']\r\nfunction MetadataButton({ isSelected, onToggleMetadata }) {\r\n    return (\r\n        <Button type={isSelected ? 'danger' : 'primary'} onClick={onToggleMetadata}>\r\n            {isSelected ? 'Remove' : 'Add'}\r\n        </Button>\r\n    )\r\n}\r\nfunction TitleBox({ title, groupName}) {\r\n    const color = colors[groupName.length % colors.length]\r\n    return (\r\n        <Row gutter={8} type='flex'>\r\n            <Col><p>{title}</p></Col>\r\n            <Col><Tag color={color}>{groupName}</Tag></Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default class MetadataDiscovery extends Component {\r\n    \r\n    state = this.initState\r\n\r\n    componentWillReceiveProps = (o, nextProps) => {\r\n        this.setState(this.initState)\r\n    }\r\n\r\n    get initState()  {\r\n        return {\r\n            metadatas: this.props.globalMetadatas.map(metadata => _.assign(metadata, {isSelected: false})),\r\n            secondDrawerOpen: false,\r\n            secondDrawerTitle: '',\r\n            secondDrawerDes: '',\r\n            secondDrawerGroup: '',\r\n            secondDrawerImageDetail: '',\r\n            secondDrawerType: '',\r\n            imageVisible: false\r\n        }\r\n    }\r\n\r\n    onTabClick = (value) => {\r\n        console.log(value)\r\n    }\r\n\r\n    onClose = () => {\r\n        console.log(this.props.globalMetadatas)\r\n        this.setState(this.initState)\r\n        this.props.onCancel();\r\n    }\r\n\r\n    onSubmitMetadatas = () => {\r\n        const selectedMetadatas = _.filter(this.state.metadatas, {isSelected: true})\r\n        this.setState(this.initState)\r\n        this.props.onSubmitMetadatas(selectedMetadatas)\r\n    }\r\n\r\n    onToggleMetadata = (metadataKey) => () => {\r\n        const oldMetadata = _.find(this.state.metadatas, { 'key': metadataKey })\r\n        oldMetadata.isSelected = !oldMetadata.isSelected\r\n        this.setState({\r\n            metadata: _.assign(this.state.metadatas, oldMetadata)\r\n        })\r\n    }\r\n\r\n    onToggleSecondDrawer = (metadata) => () => {\r\n        if (this.state.secondDrawerOpen)\r\n        {\r\n            this.setState({\r\n                secondDrawerOpen: false\r\n            })\r\n        } else if (metadata) {\r\n            this.setState({\r\n                secondDrawerOpen: true,\r\n                secondDrawerTitle: metadata.key,\r\n                secondDrawerDes: metadata.des,\r\n                secondDrawerType: metadata.type,\r\n                secondDrawerGroup: metadata.group,\r\n                secondDrawerImageDetail: metadata.imgUrl\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isOpen } = this.props\r\n        \r\n        const allMetadatas = this.state.metadatas.map(metadata => (\r\n            <ListItem \r\n            key={metadata.key}\r\n            actions={[\r\n            <MetadataButton isSelected={metadata.isSelected} onToggleMetadata={this.onToggleMetadata(metadata.key)}/>,\r\n            <Button \r\n            type='dashed'  \r\n            onClick={this.onToggleSecondDrawer(metadata)}>Detail</Button>]}>\r\n                <ListItem.Meta\r\n                \r\n                title={<TitleBox title={metadata.key} groupName={metadata.group}/>}\r\n                description={<p>{metadata.des}</p>}/>\r\n            </ListItem>\r\n        ))\r\n        const listContainerStyle = { height: '780px', overflowY: 'auto' }\r\n        const groupedMetadata = _.groupBy(this.state.metadatas, 'group')\r\n        const groupedMetadataItems = _.keys(groupedMetadata).map((groupName, index) => (\r\n            <TabPane tab={groupName} key={index+1}>\r\n                <List size='large' style={listContainerStyle}>\r\n                    {\r\n                       groupedMetadata[groupName].map(child => (\r\n                           <ListItem \r\n                           key={child.key}\r\n                           actions={[\r\n                           <MetadataButton isSelected={child.isSelected} onToggleMetadata={this.onToggleMetadata(child.key)}/>,\r\n                           <Button \r\n                           type='dashed' \r\n                           onClick={this.onToggleSecondDrawer(child)}>Detail</Button>]}>\r\n                               <ListItem.Meta\r\n                                title={<TitleBox title={child.key} groupName={groupName}/>}\r\n                                description={<p >{child.des}</p>}/>\r\n                            </ListItem>\r\n                       )) \r\n                    }\r\n                </List>\r\n            </TabPane>\r\n        ))\r\n\r\n        const detailImageDiv = _.isEmpty(this.state.secondDrawerImageDetail) ? \r\n        <span className='no-detail-screenshot'>No Detail ScreenShot</span> :\r\n        <img \r\n        src={this.state.secondDrawerImageDetail}\r\n        alt='No Detail ScreenShot'\r\n        onClick={() => {this.setState({ imageVisible: !this.state.imageVisible })}} />  \r\n\r\n        return (\r\n            <Drawer \r\n            title=\"Add Metadata\"\r\n            width=\"60%\"\r\n            visible={isOpen}\r\n            onClose={this.onClose}>\r\n                <Search\r\n                enterButton='Search'\r\n                size='large'\r\n                placeholder='Seach Metadata'/>\r\n                <Tabs style={{marginTop: '20px'}} defaultActiveKey=\"0\" onChange={this.onTabClick}>\r\n                    <TabPane tab='All' key='0'>\r\n                        <List size='large' style={listContainerStyle}>\r\n                            {allMetadatas}\r\n                        </List>\r\n                    </TabPane >\r\n                    {groupedMetadataItems}\r\n                </Tabs>\r\n                <div\r\n                style={{\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    padding: '24px',\r\n                    width: '100%',\r\n                    backgroundColor: 'white'\r\n                }}>\r\n                    <Button\r\n                    block\r\n                    onClick={this.onSubmitMetadatas} \r\n                    type=\"primary\" \r\n                    size='large'>\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n                <Drawer\r\n                title={this.state.secondDrawerTitle}\r\n                width={400}\r\n                closable={false}\r\n                onClose={this.onToggleSecondDrawer()}\r\n                visible={this.state.secondDrawerOpen}\r\n                >\r\n                    <div className='second-drawer-content'>\r\n                        <div>Metadata Group: <Tag color='blue'>{this.state.secondDrawerGroup}</Tag></div>\r\n                        <div>Metadata Type: <Tag color='purple'>{this.state.secondDrawerType}</Tag></div>\r\n                        <div>Used Count: <Tag color='cyan'>109</Tag></div>\r\n                        <Alert \r\n                        type='success' \r\n                        description={_.isEmpty(this.state.secondDrawerDes) ? 'No Description' : this.state.secondDrawerDes} \r\n                        message='Description'/>\r\n                        <p>Metadata ScreenShot: </p>\r\n                        {detailImageDiv}\r\n                        <Viewer\r\n                        visible={this.state.imageVisible}\r\n                        onClose={() => { this.setState({ imageVisible: false }); } }\r\n                        images={[{src: this.state.secondDrawerImageDetail, alt: 'Docs ScreenShot Details'}]}\r\n                        />\r\n                    </div>\r\n                </Drawer>\r\n            </Drawer>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Col, Button, Divider} from 'antd'\r\nimport BooleanConfig from './BooleanConfig'\r\nimport MetadataItemConfig from './MetadataItemConfig'\r\nimport MetadataDiscovery from './MetadataDiscovery'\r\n\r\nexport default class MetadataSetting extends Component {\r\n\r\n    state = {\r\n        openAddMetadata: false\r\n    }\r\n\r\n    onToggleAddMetadata = () => {\r\n        this.setState({\r\n            openAddMetadata: !this.state.openAddMetadata\r\n        })\r\n    }\r\n\r\n    onSubmitMetadatas = (selectedMetadatas) => {\r\n        this.setState({\r\n            openAddMetadata: false,\r\n        })\r\n        this.props.addMetadataToPanel(selectedMetadatas)\r\n    }\r\n\r\n    render() {\r\n        const { name, metadatas, isChecked, metadataSet } = this.props\r\n        const metadataItems = metadatas.map(metadata => <MetadataItemConfig key={metadata.key} keyName={metadata.key} fileJson={metadata.fileJson} hasFileMetadata={metadata.hasFileMetadata} value={metadata.value} hint={metadata.hint}/>)\r\n\r\n        return (\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <div style={{display:'flex', flexDirection: 'column'}}>\r\n                    <Col span={24}>\r\n                        <h2>Metadata</h2>\r\n                        <span>Following metadata will be applied docset-wide (globalMetadata)</span>\r\n                        <Divider />\r\n                    </Col>\r\n                    <BooleanConfig \r\n                    keyName=\"Accepts community contributions\" \r\n                    des=\"Select if your content accepts community contributions, adds a button to the rendered page which directs external users to a repository to submit pull requests\" \r\n                    checked={isChecked}/>\r\n                    \r\n                    {metadataItems}\r\n                    \r\n                    <Button \r\n                    type=\"dashed\" \r\n                    size='large' \r\n                    icon='plus' \r\n                    style={{width: '100%', marginTop: '10px'}} \r\n                    onClick={this.onToggleAddMetadata}>\r\n                        Add Metadata\r\n                    </Button>\r\n                </div>\r\n                <MetadataDiscovery \r\n                isOpen={this.state.openAddMetadata} \r\n                onSubmitMetadatas={this.onSubmitMetadatas} \r\n                onCancel={this.onToggleAddMetadata}\r\n                globalMetadatas={metadataSet}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst Option = Select.Option\r\n\r\nexport default function OutputConfig({keyName, des, branches, selected}) {\r\n    const options = branches.map(branch => <Option key={branch}>{branch}</Option>)\r\n    \r\n    return (\r\n        <div style={{marginBottom: '20px'}}>\r\n            <h3>{keyName}</h3>\r\n            <Select\r\n            mode=\"tags\"\r\n            style={{ width: '100%' }}\r\n            defaultValue={selected}\r\n            placeholder=\"Input branch to filter\"\r\n            >\r\n                {options}\r\n            </Select>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { List, Input, Button } from 'antd'\r\n\r\nconst ListItem = List.Item\r\n\r\nexport default function EmailConfigs({keyName, des, emails}) {\r\n    const items = emails.map(email => <ListItem key={email} actions={[<a href='/'>Delete</a>]}>{email}</ListItem>)\r\n    \r\n    return (\r\n        <div style={{marginBottom: '20px'}}>\r\n            <h3>{keyName}</h3>\r\n            <span>{des}</span>\r\n            <div style={{display: 'flex', margin: '20px 0 20px 0'}}>\r\n                <Input placeholder='Add email...'/>\r\n                <Button type='primary' icon='plus' style={{marginLeft: '10px'}}>Add email</Button>\r\n            </div>\r\n            <List bordered >\r\n                {items}\r\n            </List>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Input,  Row, Tooltip, Icon } from 'antd'\r\n\r\nexport default function StringWithTitleConfig({keyName, des, value}) {\r\n    return (\r\n        <Row style={{marginTop: '20px'}} type='flex' justify='space-between'>\r\n            <div style={{display: 'flex'}}>\r\n            <span style={{fontSize: '16px', color: 'grey', 'fontWeight': '400'}}>{keyName}</span>\r\n                <Tooltip title={des}>\r\n                    <Icon type=\"info-circle\" theme=\"twoTone\" style={{margin: '3px'}}/>\r\n                </Tooltip>\r\n            </div>\r\n            <Input value={value} style={{margin: '10px 0'}} />\r\n        </Row>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport {Divider} from 'antd'\r\nimport OutputConfig from './OutputConfig'\r\nimport EmailConfigs from './EmailConfigs'\r\nimport StringWithTitleConfig from './StringWithTitleConfig'\r\n\r\nexport default class RepoConfigs extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h2>Public Contributor</h2>\r\n                    <Divider />\r\n                    <StringWithTitleConfig \r\n                    keyName='Git Repository URL open to public contributors'\r\n                    des='The url of the git repository open to public contributors. If not specified, use current git repository url.' \r\n                    value='https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md'\r\n                    />\r\n                    <StringWithTitleConfig \r\n                    keyName='Git Repository Branch open to public contributors'\r\n                    des='The branch of the git repository open to public contributors. If not specified, use current git repository branch.'\r\n                    value='master'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h2>Email Notification</h2>\r\n                    <Divider />\r\n                    <EmailConfigs \r\n                    keyName='Build/publish notifications will be sent to these email addresses' \r\n                    emails={['jasoz@microsoft.com', 'zifan@microsoft.com', 'yanzhao@microsoft.com', 'jahe@microsoft.com']} />\r\n                </div>\r\n                <div>\r\n                    <h2>Branch level functionality</h2>\r\n                    <Divider />\r\n                    <OutputConfig \r\n                    keyName=\"Generate PDF on following branches\" \r\n                    branches={['master', 'live', 'test', 'zifan-test']}\r\n                    selected={['master']}/>\r\n                    <OutputConfig \r\n                    keyName=\"Generate intellisense on following  branches\" \r\n                    branches={['master', 'live', 'test', 'zifan-test']}\r\n                    selected={['master', 'live']}/>\r\n                    <OutputConfig \r\n                    keyName=\"Enable bilingual on following branches\" \r\n                    branches={['master', 'live', 'test', 'zifan-test']}\r\n                    selected={['zifan-test', 'test']}/>\r\n                </div>\r\n                <div>\r\n                    <h2>Branch Policy</h2>\r\n                    <Divider />\r\n                    <OutputConfig \r\n                    keyName=\"No build/publish will be trigged on following branches\" \r\n                    branches={['master', 'live', 'test', 'zifan-test']}\r\n                    selected={['live-sxs']}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Drawer,  Button, Form, Input, Tooltip, Icon, Select, Upload } from 'antd'\r\nimport _ from 'lodash'\r\n\r\nconst FormItem = Form.Item\r\nconst Option = Select.Option\r\nconst TextArea = Input.TextArea\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    }\r\n}\r\nconst fullWidthItemLayout = {\r\n    labelCol: {\r\n        span: 24\r\n    },\r\n    wrapperCol: {\r\n        span: 24\r\n    }\r\n}\r\nconst metadataType = ['bool', 'string', 'number', 'object', 'one or many']\r\n\r\nclass MetadataRegisterForm extends Component {\r\n    state = this.initState\r\n    \r\n    get initState() {\r\n        if (this.props.metadataSet) {\r\n            return {\r\n                groups: _.uniq(this.props.metadataSet.map(metadata => metadata.group)),\r\n                names: this.props.metadataSet.map(metadata => metadata.key),\r\n                values: this.props.metadataSet.map(metadata => metadata.value)\r\n            }\r\n        } else {\r\n            return {\r\n                group: [],\r\n                names: []\r\n            }\r\n        }\r\n    }\r\n\r\n    onAddMetadataSet = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                values.key = values.name\r\n                values.group = _.first(values.group)\r\n                console.log(\"hehe\", values)\r\n                this.props.onAddMetadataSet(values)\r\n            }\r\n        });\r\n    }\r\n\r\n    validateValueExist = (key) => (rule, value, callback) => {\r\n        let valueArray = []\r\n        switch(key) {\r\n            case \"name\":\r\n                valueArray = this.state.names\r\n                break;\r\n            case \"value\":\r\n            default:\r\n                valueArray = this.state.values\r\n        }\r\n\r\n        console.log(valueArray, value, key, valueArray.includes(value))\r\n\r\n        if (!valueArray.includes(value)) {\r\n            callback()\r\n        } else {\r\n            callback(`The ${key} name has already exist`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.onAddMetadataSet}>\r\n                <FormItem\r\n                {...formItemLayout}\r\n                label=\"Metadata Name\"\r\n                >\r\n                {getFieldDecorator('name', {\r\n                    rules: [{\r\n                    required: true, message: 'Please input metadata name!',\r\n                    }, {\r\n                    validator: this.validateValueExist('name'),\r\n                    }],\r\n                })(\r\n                    <Input />\r\n                )}\r\n                </FormItem>\r\n                <FormItem\r\n                {...formItemLayout}\r\n                label={(\r\n                    <span>\r\n                      Metadata Value&nbsp;\r\n                      <Tooltip title=\"Value is what your docfx.json key name.\">\r\n                        <Icon type=\"question-circle-o\" />\r\n                      </Tooltip>\r\n                    </span>\r\n                  )}\r\n                >\r\n                {getFieldDecorator('value', {\r\n                    rules: [{\r\n                    required: true, message: 'Please input metadata value!',\r\n                    }, {\r\n                    validator: this.validateValueExist('value'),\r\n                    }],\r\n                })(\r\n                    <Input />\r\n                )}\r\n                </FormItem>\r\n                <FormItem\r\n                {...formItemLayout}\r\n                label='Metadata Type'\r\n                >\r\n                {getFieldDecorator('type', {\r\n                    rules: [{\r\n                    required: true, message: 'Please select metadata type!',\r\n                    }],\r\n                })(\r\n                    <Select placeholder='Select the metadata type'>\r\n                        {metadataType.map(type => (<Option value={type}>{type}</Option>))}\r\n                    </Select>\r\n                )}\r\n                </FormItem>\r\n                <FormItem\r\n                {...formItemLayout}\r\n                label='Metadata Group'\r\n                >\r\n                {getFieldDecorator('group', {\r\n                    rules: [{\r\n                    required: true, message: 'Please select metadata group!',\r\n                    }],\r\n                })(\r\n                    <Select \r\n                    allowClear\r\n                    mode=\"tags\" \r\n                    placeholder='Select the metadata group'\r\n                    notFoundContent='Add new group'>\r\n                        {this.state.groups.map(group => (<Option value={group}>{group}</Option>))}\r\n                    </Select>\r\n                )}\r\n                </FormItem>\r\n                <FormItem\r\n                {...fullWidthItemLayout}\r\n                label='Metadata Description'\r\n                >\r\n                {getFieldDecorator('des', {\r\n                    rules: [{\r\n                    required: true, message: 'Describe this metadata!',\r\n                    }],\r\n                })(\r\n                    <TextArea rows={4}></TextArea>\r\n                )}\r\n                </FormItem>\r\n                <FormItem\r\n                {...fullWidthItemLayout}\r\n                label='Metadata ScreenShot'\r\n                >\r\n                {getFieldDecorator('imgUrl', {\r\n                valuePropName: 'fileList',\r\n                getValueFromEvent: this.normFile,\r\n                })(\r\n                <Upload.Dragger name=\"files\" action='/action.do'>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                    <Icon type=\"inbox\" />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                    <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n                </Upload.Dragger>\r\n                )}\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button \r\n                    block\r\n                    type='primary'\r\n                    size='large'\r\n                    htmlType=\"submit\">\r\n                        Add\r\n                    </Button>\r\n                </FormItem>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class MetadataRegister extends Component {\r\n\r\n    \r\n    render() {\r\n        const { onClose, showMetadataRegister, metadataSet, onAddMetadataSet } = this.props\r\n        const MetadataRegistrationForm = Form.create()(MetadataRegisterForm)\r\n\r\n        return (\r\n            <Drawer\r\n            visible={showMetadataRegister}\r\n            onClose={onClose}\r\n            title='Register New Metadata'\r\n            width={450}>\r\n                <MetadataRegistrationForm metadataSet={metadataSet} onAddMetadataSet={onAddMetadataSet}/>\r\n            </Drawer>\r\n        )\r\n    }\r\n}","import { Layout, Menu, Icon, Button, message } from 'antd'\r\nimport React, { Component } from 'react'\r\nimport MetadataSetting from './MetadataSetting'\r\nimport RepoConfigs from './RepoConfigs'\r\nimport _ from 'lodash'\r\nimport '../App.css'\r\nimport detailImg from '../res/feedback_url_image.png'\r\nimport MetadataRegister from './MetadataRegister';\r\n\r\nconst { Header, Sider, Content } = Layout\r\n\r\nconst SubMenu = Menu.SubMenu\r\nconst menuName = ['Docset1', 'Docset2', 'Configuration']\r\nconst docset1Metadatas = [\r\n    {\r\n        key: 'feedback_github_repo',\r\n        hasFileMetadata: true,\r\n        value: 'MicrosoftDocs/azure-docs'\r\n    },\r\n    {\r\n        key: 'feedback_product_url',\r\n        value: 'https://feedback.azure.com/forums/34192--general-feedback'\r\n    },\r\n    {\r\n        key: 'breadcrumb_path',\r\n        value: '/azure/bread/toc.json'\r\n    },\r\n    {\r\n        key: 'brand',\r\n        value: 'azure'\r\n    }\r\n]\r\nconst docset2Metadatas = [\r\n    {\r\n        key: 'feedback_product_url',\r\n        hasFileMetadata: true,\r\n        fileJson: '**/*.md',\r\n        value: 'https://feedback.azure.com/forums/34193--general-feedback'\r\n    },\r\n    {\r\n        key: 'breadcrumb_path',\r\n        hasFileMetadata: true,\r\n        fileJson: '**/build/*.yaml',\r\n        value: '/azurelearning/bread/toc.json'\r\n    },\r\n    {\r\n        key: 'brand',\r\n        hasFileMetadata: true,\r\n        fileJson: '**/*.md',\r\n        value: 'azure learning'\r\n    }\r\n]\r\nconst metadataSet = [\r\n    {\r\n        group: 'Feedback',\r\n        key: 'feedback product url',\r\n        value: 'feedback_product_url',\r\n        imgUrl: detailImg,\r\n        type: 'string',\r\n        des: 'Config the feedback url for product'\r\n    },\r\n    {\r\n        group: 'Feedback',\r\n        key: 'feedback github repo',\r\n        value: 'feedback_github_repo',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'Feedback',\r\n        key: 'feedback system',\r\n        value: 'feedback_system',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'Feedback',\r\n        key: 'product feedback displaytext',\r\n        value: 'product_feedback_displaytext',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'BreadCrumb',\r\n        key: 'breadcrumb path',\r\n        value: 'breadcrumb_path',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'BreadCrumb',\r\n        key: 'extend breadcrumb',\r\n        value: 'extend_breadcrumb',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'ContributorList',\r\n        key: 'author',\r\n        value: 'author',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'ContributorList',\r\n        key: 'contributors to exclude',\r\n        value: 'contributors_to_exclude',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n]\r\nexport default class NewMetadata extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        selectedContent: 0,\r\n        name: menuName[0],\r\n        docsetMetadata1: docset1Metadatas,\r\n        docsetMetadata2: docset2Metadatas,\r\n        metadataSet: metadataSet,\r\n        showMetadataRegister: false\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        })\r\n    }\r\n\r\n    menuClick = (e) => {\r\n        this.setState({\r\n            name: menuName[e.key],\r\n            selectedContent: e.key\r\n        })\r\n    }\r\n\r\n    addMetadataToPanel = (valuesToBeAdded) => {\r\n        valuesToBeAdded = valuesToBeAdded.map(item => {\r\n            let hintValue = null\r\n            if (item.type) {\r\n                //'bool', 'string', 'number', 'object', 'one or many'\r\n                switch (item.type) {\r\n                    case 'bool':\r\n                        hintValue = 'Boolean value: true/false'\r\n                        break;\r\n                    case 'number':\r\n                        hintValue = 'Number value: integer/float/double'\r\n                        break;\r\n                    case 'object':\r\n                        hintValue = 'JSON object value: {\"a\": \"a value\"}'\r\n                        break;\r\n                    case 'one or many':\r\n                        hintValue = 'One or many value: string/string[]'\r\n                        break;\r\n                    case 'string':\r\n                    default:\r\n                        hintValue = 'String value'\r\n                        break;\r\n                }\r\n            }\r\n            item.value = ''\r\n            item.hint = hintValue\r\n            return item\r\n        })\r\n        if (parseInt(this.state.selectedContent) === 0)\r\n        {\r\n            this.setState({\r\n                docsetMetadata1: _.uniqBy(_.concat(this.state.docsetMetadata1, valuesToBeAdded), 'key')\r\n            })\r\n        }\r\n        else \r\n        {\r\n            this.setState({\r\n                docsetMetadata2: _.uniqBy(_.concat(this.state.docsetMetadata2, valuesToBeAdded), 'key')\r\n            })\r\n        }    \r\n    }\r\n\r\n    onAddMetadataSet = (newMetadata) => {\r\n        this.setState({\r\n            metadataSet: _.concat(this.state.metadataSet, newMetadata),\r\n            showMetadataRegister: false\r\n        })\r\n        message.success(\"New metadata has registed.\")\r\n    }\r\n\r\n    onToggleMetadataRegister = () => {\r\n        this.setState({\r\n            showMetadataRegister: !this.state.showMetadataRegister\r\n        })\r\n    }\r\n\r\n    contentRender = (key) => {\r\n        switch (parseInt(key))\r\n        {\r\n            case 2:\r\n                return <RepoConfigs />\r\n            case 1:\r\n                return <MetadataSetting \r\n                name={this.state.name} \r\n                metadatas={this.state.docsetMetadata2} \r\n                isChecked={false} \r\n                metadataSet={this.state.metadataSet}\r\n                addMetadataToPanel={this.addMetadataToPanel} />\r\n            case 0:\r\n            default:\r\n                return <MetadataSetting \r\n                name={this.state.name} \r\n                metadatas={this.state.docsetMetadata1} \r\n                isChecked \r\n                metadataSet={this.state.metadataSet}\r\n                addMetadataToPanel={this.addMetadataToPanel} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const content = this.contentRender(this.state.selectedContent)\r\n        return (\r\n            <Layout>\r\n            <Sider\r\n                trigger={null}\r\n                collapsible\r\n                collapsed={this.state.collapsed}\r\n                width={220}\r\n            >\r\n                <div className=\"logo\" />\r\n                <Menu \r\n                theme=\"dark\" \r\n                mode=\"inline\" \r\n                defaultSelectedKeys={['0']}\r\n                defaultOpenKeys={['sub1']}\r\n                style={{textAlign: 'left', padding: '20px 5px 20px 5px'}}\r\n                onClick={this.menuClick}\r\n                >\r\n                <SubMenu key=\"sub1\" title={<span><Icon type=\"book\" /><span>Metadata</span></span>}>\r\n                    <Menu.Item key=\"0\">\r\n                        <Icon type=\"book\" />\r\n                        <span>{menuName[0]}</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"1\">\r\n                        <Icon type=\"book\" />\r\n                        <span>{menuName[1]}</span>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n                <Menu.Item key=\"2\">\r\n                    <Icon type=\"file-text\" />\r\n                    <span>{menuName[2]}</span>\r\n                </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{ background: '#fff', display: 'flex', alignItems: 'center', justifyContent: 'space-between'}}>\r\n                <div style={{ background: '#fff', fontSize: '20px', fontWeight: '500', textAlign: 'left'}}>\r\n                    <Icon\r\n                    className=\"trigger\"\r\n                    type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                    onClick={this.toggle}\r\n                    />\r\n                    <span style={{paddingLeft: \"10px\"}}>OPS Settings</span>\r\n                </div>\r\n                <Button type='primary' icon='setting' onClick={this.onToggleMetadataRegister}>\r\n                    Metadata Register\r\n                </Button>\r\n                </Header>\r\n                <Content className=\"main-content\">\r\n                    {content}\r\n                    <MetadataRegister \r\n                    metadataSet={this.state.metadataSet} \r\n                    onAddMetadataSet={this.onAddMetadataSet} \r\n                    onClose={this.onToggleMetadataRegister}\r\n                    showMetadataRegister={this.state.showMetadataRegister}\r\n                    />\r\n                </Content>\r\n            </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Col, Button, Divider} from 'antd'\r\nimport BooleanConfig from './BooleanConfig'\r\nimport MetadataItemConfig from './MetadataItemConfig'\r\nimport _ from 'lodash'\r\n\r\nexport default class OldMetadataSetting extends Component {\r\n    state = {\r\n        metadatas: this.props.metadatas\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        this.setState({\r\n            metadatas: nextProps.metadatas\r\n        })\r\n    }\r\n\r\n    onAddMetadata = () => {\r\n        this.setState({\r\n            metadatas: _.concat(this.state.metadatas, { key:'', value: '' })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name } = this.props\r\n        const metadataItems = this.state.metadatas.map(metadata => <MetadataItemConfig showFileMetadata={false} key={metadata.key} keyName={metadata.key} fileJson={metadata.fileJson} hasFileMetadata={metadata.hasFileMetadata} value={metadata.value}/>)\r\n        \r\n        return (\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <div style={{display:'flex', flexDirection: 'column'}}>\r\n                    <Col span={24}>\r\n                        <h2>Metadata</h2>\r\n                        <span>Following metadata will be applied docset-wide (globalMetadata)</span>\r\n                        <Divider />\r\n                    </Col>\r\n                    <BooleanConfig \r\n                    keyName=\"Accepts community contributions\" \r\n                    des=\"Select if your content accepts community contributions, adds a button to the rendered page which directs external users to a repository to submit pull requests\" \r\n                    checked={true}/>\r\n                    \r\n                    {metadataItems}\r\n                    \r\n                    <Button \r\n                    type=\"dashed\" \r\n                    size='large' \r\n                    icon='plus' \r\n                    style={{width: '100%', marginTop: '10px'}} \r\n                    onClick={this.onAddMetadata}>\r\n                        Add Metadata\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Layout, Menu, Icon, Button, message } from 'antd'\r\nimport React, { Component } from 'react'\r\nimport OldMetadataSetting from './OldMetadataSetting';\r\nimport RepoConfigs from './RepoConfigs'\r\n\r\nconst { Header, Sider, Content } = Layout\r\n\r\nconst SubMenu = Menu.SubMenu\r\nconst menuName = ['Docset1', 'Docset2', 'Configuration']\r\n\r\nconst docset1Metadatas = [\r\n    {\r\n        key: 'feedback_github_repo',\r\n        hasFileMetadata: true,\r\n        value: 'MicrosoftDocs/azure-docs'\r\n    },\r\n    {\r\n        key: 'feedback_product_url',\r\n        value: 'https://feedback.azure.com/forums/34192--general-feedback'\r\n    },\r\n    {\r\n        key: 'breadcrumb_path',\r\n        value: '/azure/bread/toc.json'\r\n    },\r\n    {\r\n        key: 'brand',\r\n        value: 'azure'\r\n    }\r\n]\r\nconst docset2Metadatas = [\r\n    {\r\n        key: 'feedback_product_url',\r\n        hasFileMetadata: true,\r\n        fileJson: '**/*.md',\r\n        value: 'https://feedback.azure.com/forums/34193--general-feedback'\r\n    },\r\n    {\r\n        key: 'breadcrumb_path',\r\n        hasFileMetadata: true,\r\n        fileJson: '**/build/*.yaml',\r\n        value: '/azurelearning/bread/toc.json'\r\n    }\r\n]\r\nexport default class NewMetadata extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        selectedContent: 0,\r\n        name: menuName[0]\r\n    }\r\n\r\n    menuClick = (e) => {\r\n        this.setState({\r\n            name: menuName[e.key],\r\n            selectedContent: e.key\r\n        })\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        })\r\n    }\r\n\r\n    contentRender = (key) => {\r\n        switch (parseInt(key))\r\n        {\r\n            case 2:\r\n                return <RepoConfigs />\r\n            case 1:\r\n                return <OldMetadataSetting \r\n                name={this.state.name} \r\n                metadatas={docset2Metadatas} />\r\n            case 0:\r\n            default:\r\n                return <OldMetadataSetting \r\n                name={this.state.name} \r\n                metadatas={docset1Metadatas} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const content = this.contentRender(this.state.selectedContent)\r\n        return (\r\n            <Layout>\r\n            <Sider\r\n                trigger={null}\r\n                collapsible\r\n                collapsed={this.state.collapsed}\r\n                width={220}\r\n            >\r\n                <div className=\"logo\" />\r\n                <Menu \r\n                theme=\"dark\" \r\n                mode=\"inline\" \r\n                defaultSelectedKeys={['0']}\r\n                defaultOpenKeys={['sub1']}\r\n                style={{textAlign: 'left', padding: '20px 5px 20px 5px'}}\r\n                onClick={this.menuClick}\r\n                >\r\n                <SubMenu key=\"sub1\" title={<span><Icon type=\"book\" /><span>Metadata</span></span>}>\r\n                    <Menu.Item key=\"0\">\r\n                        <Icon type=\"book\" />\r\n                        <span>{menuName[0]}</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"1\">\r\n                        <Icon type=\"book\" />\r\n                        <span>{menuName[1]}</span>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n                <Menu.Item key=\"2\">\r\n                    <Icon type=\"file-text\" />\r\n                    <span>{menuName[2]}</span>\r\n                </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{ background: '#fff', fontSize: '20px', fontWeight: '500', textAlign: 'left'}}>\r\n                <div>\r\n                    <Icon\r\n                    className=\"trigger\"\r\n                    type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                    onClick={this.toggle} />\r\n                    <span style={{paddingLeft: \"10px\"}}>OPS Settings</span>\r\n                </div>\r\n                </Header>\r\n                <Content className=\"main-content\">\r\n                    {content}\r\n                </Content>\r\n            </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Tabs, Button, List, Tag, Input, Switch, InputNumber, message, Badge } from 'antd'\r\nimport MetadataDiscovery from './MetadataDiscovery'\r\nimport _ from 'lodash'\r\n\r\nconst Tab = Tabs.TabPane\r\nconst typeColorMap = {\r\n    'string': 'magenta',\r\n    'bool': 'green',\r\n    'one or many': 'orange',\r\n    'object': 'blue',\r\n    'number': 'purple' \r\n}\r\nconst metadataSet = [\r\n    {\r\n        group: 'Page',\r\n        subGroup: 'Feedback button',\r\n        key: 'Title suffix',\r\n        type: 'string',\r\n        des: 'Config the feedback url for product'\r\n    },\r\n    {\r\n        group: 'Page',\r\n        subGroup: 'Feedback',\r\n        key: 'Edit button',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'Page',\r\n        subGroup: 'Feedback',\r\n        key: 'Feedback button',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'Page',\r\n        subGroup: 'Feedback',\r\n        key: 'Download PDF button',\r\n        type: 'string',\r\n        des: ''\r\n    },\r\n    {\r\n        group: 'Page',\r\n        subGroup: 'Archived page disclaimer',\r\n        key: 'Search button (search scope)',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Page',\r\n        subGroup: 'Language selector',\r\n        key: 'Language selector',\r\n        type: 'one or many'\r\n    },\r\n    {\r\n        group: 'Page',\r\n        subGroup: 'Language selector',\r\n        key: 'Archived page disclaimer',\r\n        type: 'one or many'\r\n    },\r\n    {\r\n        group: 'Navigation on page',\r\n        subGroup: 'Header/footer',\r\n        key: 'Header/footer',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Navigation on page',\r\n        subGroup: 'Header/footer',\r\n        key: 'Breadcrumb',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Navigation on page',\r\n        subGroup: 'Header/footer',\r\n        key: 'Fusion TOC',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'URL',\r\n        subGroup: 'Header/footer',\r\n        key: 'Base URL',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'URL',\r\n        subGroup: 'Header/footer',\r\n        key: 'Shared base path',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'URL',\r\n        subGroup: 'Header/footer',\r\n        key: 'Redirection',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Versioning',\r\n        subGroup: 'Header/footer',\r\n        key: 'Moniker range',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Localization',\r\n        subGroup: 'Header/footer',\r\n        key: 'Bilingual (side by side)',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Cross Repository',\r\n        subGroup: 'Header/footer',\r\n        key: 'Cross Repository Reference (CRR)',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Cross Repository',\r\n        subGroup: 'Header/footer',\r\n        key: 'XRef',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Build output',\r\n        subGroup: 'Header/footer',\r\n        key: 'PDF',\r\n        type: 'number'\r\n    },\r\n    {\r\n        group: 'Build output',\r\n        subGroup: 'Header/footer',\r\n        key: 'Intellisense',\r\n        type: 'number'\r\n    },\r\n]\r\n\r\nexport default class FunctionalSetting extends Component {\r\n    state = {\r\n        openAddMetadata: false,\r\n        updatedItemNums: {}\r\n    }\r\n\r\n    getGroupedCount = (metadatas) => {\r\n        return metadatas.reduce((result, metadata) => {\r\n            const group = metadata.group\r\n            if (!result.hasOwnProperty(group)) {\r\n                result[group] = 1\r\n            } else {\r\n                result[group] ++\r\n            }\r\n            return result\r\n        }, {})\r\n    }\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        console.log(nextProps)\r\n        if (this.props.docsetName === nextProps.docsetName) {\r\n            const oldMetadatasNum = this.getGroupedCount(this.props.metadatas)\r\n            const newMetadatasNum = this.getGroupedCount(nextProps.metadatas)\r\n\r\n            console.log(oldMetadatasNum, newMetadatasNum)\r\n\r\n            this.setState({\r\n                updatedItemNums: _.mapValues(newMetadatasNum, (value, key) => {\r\n                    return  value - (oldMetadatasNum[key] ? oldMetadatasNum[key] : 0)\r\n                })\r\n            })\r\n        } else {\r\n            this.setState({\r\n                updatedItemNums: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    onClickTabs = (key) => {\r\n        const newUpdatedItemNums = _.set(this.state.updatedItemNums, key, 0)\r\n        this.setState({\r\n            updatedItemNums: newUpdatedItemNums\r\n        })\r\n    }\r\n\r\n    onToggleAddMetadata = () => {\r\n        this.setState({\r\n            openAddMetadata: !this.state.openAddMetadata\r\n        })\r\n    }\r\n\r\n    onSubmitMetadatas = (newMetadatas) => {\r\n        this.setState({\r\n            openAddMetadata: false\r\n        })\r\n        this.props.onSubmitMetadatas(newMetadatas)\r\n    }\r\n\r\n    onFakeChangeMetadatas = () => {\r\n        message.success('New functinonal settings applied!')\r\n    }\r\n\r\n    getInput(type, value) {\r\n        switch (type) {\r\n            case 'object':\r\n                return <Input size ='large' placeholder='Accept Json object value' defaultValue={value}/>\r\n            case 'one or many':\r\n                return <Input size ='large' placeholder='Accept one string or a string array' defaultValue={value}/>\r\n            case 'bool':\r\n                return <Switch size ='large' checkedChildren=\"True\" unCheckedChildren=\"False\"/>\r\n            case 'number':\r\n                return <InputNumber size ='large' defaultValue={value}/>\r\n            case 'string':\r\n            default:\r\n                return <Input size ='large' placeholder='Accept string value' defaultValue={value}/>\r\n        }\r\n    }\r\n    render() {\r\n        const { metadatas, docsetName } = this.props\r\n        const groupedItems = _.groupBy(metadatas, 'group')\r\n\r\n        //console.log(groupedItems)\r\n        const tabItems = _.keys(groupedItems).map(group => \r\n            <Tab tab={<Badge count={this.state.updatedItemNums[group]}><p>{group}</p></Badge>} key={group}>\r\n                <List \r\n                dataSource={groupedItems[group]}\r\n                renderItem={ item => \r\n                    <List.Item \r\n                    key={item.key}\r\n                    extra={<div style={{width: '300px'}}>{this.getInput(item.type, item.value)}</div>}\r\n                    className='functional-settings-item'>\r\n                        <List.Item.Meta\r\n                        title={item.key}\r\n                        description={<Tag color={typeColorMap[item.type]}>{item.type}</Tag>}\r\n                        />\r\n                    </List.Item> \r\n                }\r\n                />\r\n            </Tab>\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <h2>{docsetName}</h2>\r\n                    <Button type='primary' icon='setting' onClick={this.onToggleAddMetadata}>\r\n                        Add Metadatas\r\n                    </Button>\r\n                </div>\r\n                <blockquote>Following functional settings will be applied docset-wide</blockquote>\r\n                <Tabs onChange={this.onClickTabs} type='card' size='large' style={{marginTop: '20px'}}>\r\n                    {tabItems}\r\n                </Tabs>\r\n                <Button.Group style={{width: '100%', marginTop: '20px'}}>\r\n                    <Button type=\"primary\" size='large' style={{width: '50%'}} onClick={this.onFakeChangeMetadatas}>\r\n                        Changed\r\n                    </Button>\r\n                    <Button type=\"danger\" size='large' style={{width: '50%'}}>\r\n                        Revert\r\n                    </Button>\r\n                </Button.Group>\r\n                <MetadataDiscovery \r\n                    isOpen={this.state.openAddMetadata} \r\n                    onSubmitMetadatas={this.onSubmitMetadatas} \r\n                    onCancel={this.onToggleAddMetadata}\r\n                    globalMetadatas={metadataSet}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Layout, Menu, Icon, Button, message } from 'antd'\r\nimport FunctionalSetting from './FunctionalSetting';\r\nimport _ from 'lodash'\r\n\r\nconst { Header, Sider, Content } = Layout\r\nconst menuNames = ['Docset1', 'Docset2', 'Docset3']\r\nconst docset1Metadatas = [\r\n    {\r\n        key: 'Feedback github repo',\r\n        group: 'Feedback',\r\n        hasFileMetadata: true,\r\n        value: 'MicrosoftDocs/azure-docs',\r\n        type: 'string'\r\n    },\r\n    {\r\n        key: 'Feedback product url',\r\n        group: 'Feedback',\r\n        value: 'https://feedback.azure.com/forums/34192--general-feedback',\r\n        type: 'string'\r\n    },\r\n    {\r\n        key: 'Breadcrumb path',\r\n        group: 'Breadcrumb',\r\n        value: '/azure/bread/toc.json',\r\n        type: 'string'\r\n    },\r\n    {\r\n        key: 'Brand',\r\n        group: 'Breadcrumb',\r\n        value: 'azure',\r\n        type: 'object'\r\n    },\r\n    {\r\n        key: 'Accepts community contributions',\r\n        type: 'bool',\r\n        value: false,\r\n        group: 'Feedback'\r\n    }\r\n]\r\nconst docset2Metadatas = [\r\n    {\r\n        key: 'Feedback github repo',\r\n        group: 'Feedback',\r\n        hasFileMetadata: true,\r\n        value: 'MicrosoftDocs/azure-docs',\r\n        type: 'string'\r\n    },\r\n    {\r\n        key: 'Feedback product url',\r\n        group: 'Feedback',\r\n        value: 'https://feedback.azure.com/forums/34192--general-feedback',\r\n        type: 'string'\r\n    }\r\n]\r\n\r\nconst docset3Metadatas = [\r\n    {\r\n        key: 'Feedback github repo',\r\n        group: 'Feedback',\r\n        hasFileMetadata: true,\r\n        value: 'MicrosoftDocs/azure-docs',\r\n        type: 'string'\r\n    }\r\n]\r\n\r\nconst docsetsMetadatas = [docset1Metadatas, docset2Metadatas, docset3Metadatas]\r\n\r\nexport default class Functional extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        selectedContent: 0,\r\n        name: menuNames[0],\r\n        metadatas: docsetsMetadatas[0]\r\n    }\r\n\r\n    menuClick = (e) => {\r\n        this.setState({\r\n            name: menuNames[e.key],\r\n            selectedContent: e.key,\r\n            metadatas: docsetsMetadatas[e.key]\r\n        })\r\n    }\r\n\r\n    onToggleCollapsed = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        })\r\n    }\r\n\r\n    onSubmitMetadatas = (valuesToBeAdded) => {\r\n        this.setState({\r\n            metadatas: _.uniqBy(_.concat(this.state.metadatas, valuesToBeAdded), 'key')\r\n        })\r\n        message.success(\"Metadatas has added.\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n            <Sider\r\n                trigger={null}\r\n                collapsible\r\n                collapsed={this.state.collapsed}\r\n                width={220}\r\n            >\r\n                <div className=\"logo\" />\r\n                <Menu \r\n                theme=\"dark\" \r\n                mode=\"inline\" \r\n                defaultSelectedKeys={['0']}\r\n                defaultOpenKeys={['sub1']}\r\n                style={{textAlign: 'left', padding: '20px 5px 20px 5px'}}\r\n                onClick={this.menuClick}\r\n                >\r\n                    {\r\n                        menuNames.map((name, idx) => \r\n                        <Menu.Item key={idx}>\r\n                            <Icon type=\"book\" />\r\n                            <span>{name}</span>\r\n                        </Menu.Item>)\r\n                    }\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{ background: '#fff'}}>\r\n                <div style={{ background: '#fff', fontSize: '20px', fontWeight: '500', textAlign: 'left'}}>\r\n                    <Icon\r\n                    className=\"trigger\"\r\n                    type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                    onClick={this.onToggleCollapsed}\r\n                    />\r\n                    <span style={{paddingLeft: \"10px\"}}>OPS Functional Settings</span>\r\n                </div>\r\n                </Header>\r\n                <Content className=\"main-content-for-functional\">\r\n                    <FunctionalSetting\r\n                    metadatas={this.state.metadatas}\r\n                    docsetName={this.state.name}\r\n                    onToggleAddMetadata={this.onToggleAddMetadata}\r\n                    onSubmitMetadatas={this.onSubmitMetadatas}\r\n                    />\r\n                </Content>\r\n            </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport './App.css'\nimport NewMetadata from './components/NewMetadata'\nimport OldMetadata from './components/OldMetadata'\nimport Functional from './components/Functional';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route exact path='/' component={NewMetadata}/>\n        <Route path='/old' component={OldMetadata}/>\n        <Route path='/new' component={Functional}/>\n      </div>\n    </Router>\n  )\n}"],"sourceRoot":""}